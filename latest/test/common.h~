#ifndef COMMON_H
#define COMMON_H

//--------常用函数---------
#include<stdio.h>
#include<graphics.h>
#include<conio.h>
#include<stdlib.h>
#include<math.h>
#include<time.h>
#include<dos.h>
#include<string.h>
#include<bios.h>
#include<alloc.h>
#include<io.h>
#include<stdio.h>
#include<bios.h>
#include<mem.h>
#include<fcntl.h>
#include<process.h>
#include <malloc.h>
#define VGA256 0x13 //图形模式13h
#define TEXT_MODE 0x03 //普通文本模式

//-----------按键-----------
#define F1 0x3b00
#define F2 0x3c00
#define F3 0x3d00
#define F4 0x3e00
#define ESC 0x11b
#define BACKSPACE 0xe08
#define ENTER 0x1c0d 
#define LEFT 0x4b00
#define RIGHT 0x4d00
#define UP 0x4800
#define DOWN  0x5000  

//------------图形界面-------------
#define CHAR_HEIGHT 8  //点阵有8列
#define CHAR_WIDTH  8  //点阵有8行
#define SCREEN_HEIGHT 200
#define SCREEN_WIDTH 320
#define SCREEN_HEIGHT1 40
#define SCREEN_WIDTH1 320
#define SPRITE_WIDTH 16
#define SPRITE_HEIGHT 16

#define PALETTE_MASK 0x3c6
#define PALETTE_REGISTER_RD 0x3c7
#define PALETTE_REGISTER_WR 0x3c8
#define PALETTE_DATA 0x3c9
#define MAX_SPRITE_FRAMES 4

//-----------动画---------------
#define SPEED   20
#define N0      11           //车的宽度
#define OX      120
#define INIT_Y  167      //第一个拐点横纵坐标
#define INIT_X  29
#define M       131        //第一个车位纵坐标
#define L       68      // 第三区拐点横坐标
#define H       44       //第四区拐点纵坐标
#define F       2        //微调量
#define P       58      //微调量
#define S       0        //微调量
#define X       250     
//#define Y4    60
#define A       7
#define G       105
#define V       105
#define D       146

#define N 25
#define X0 396
#define Y  345
#define Y1 317
#define X2 215
#define Y0 283

//-----------画图结构体----------
typedef struct RGB_color_typ    //调色板色彩结构体
{
unsigned char red;
unsigned char green;
unsigned char blue;
}RGB_color,*RGB_color_ptr;

typedef struct pcx_header_typ   //pcx图片头文件
	{
	char manufacturer; //制造厂
	char version;//版本
	char encoding;//编码方式
	char bits_per_pixel;
	int x,y;
	int width,height;  //图像宽度和高度
	int horz_res;
	int vert_res;
	char ega_palette[48];
	char reserved;
	char num_color_planes;
	int bytes_per_line;
	int palette_type;
	char padding[58];

} pcx_header, *pcx_header_ptr;

typedef struct pcx_picture_typ  //pcx图片结构
	{
	pcx_header header;//pcx头部分
	RGB_color palette[256];//调色板数据部分
	char far *buffer;//数据区指针

	} pcx_picture, *pcx_picture_ptr;

typedef struct sprite_type      //子画面结构体
{
int x,y; //当前位置
int x_old,y_old; //先前位置
int width,height; //宽度和高度
int anim_clock;//子画面时钟
int anim_speed;//子画面速度
int motion_clock;//运动时钟
int motion_speed;//运动速度
char far *frames[MAX_SPRITE_FRAMES];//存放子画面点阵的数组时针
int curr_frame;//当前子画面帧号码
int num_frames;//子画面总帧数
int state;//当前状态
char far *background;//存放子画面背景的指针
int pro;          //行驶结点
}sprite,*sprite_ptr;

//---------小车结构---------
typedef struct {
int i;               //车位层数  
int j;               //车位区域
int k;               //车位号
char  s[3];           //车牌号
char it[15];              //进库时间
char ot[15];              //出库时间
int time;            //停车时间（秒）
int road[7][2];      //停车路径
}Car,*Cart;

//---------车库结构---------
typedef struct{
int a[3][3][7];            //车位停车状态数组0:空车位1：停车2：被分配3：被预定4:暂停使用
int f1;                    //一层空车位数
int f2;                    //二层空车位数
int f3;                    //三层空车位数
int a_park;                //所有空余车位
}Pp,*PARK_port;

//---------记录的结构-------
typedef struct REC{
	int port;             //车位号
	int carnum;        //车牌号
	char it[20];          //进库时间
	char ot[20];          //出库时间
	int time;             //停车时间（秒）
	struct REC *next;
}record,*Rec;//定义2个结构变量

//---------小车模块---------
typedef struct SP{
int x;      //当前坐标
int y;      //当前坐标
int frame;  //方向
int pro;
int fx;
int state;
}sp;

#endif
